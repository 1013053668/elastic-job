<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Indexes on </title>
    <link>http://dangdangdotcom.github.io/elastic-job/elastic-job-lite/index/</link>
    <description>Recent content in Indexes on </description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="http://dangdangdotcom.github.io/elastic-job/elastic-job-lite/index/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>http://dangdangdotcom.github.io/elastic-job/elastic-job-lite/index/index/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://dangdangdotcom.github.io/elastic-job/elastic-job-lite/index/index/</guid>
      <description>Elastic-Job - distributed scheduled job solution    
概览 Elastic-Job是一个分布式调度解决方案，由两个相互独立的子项目Elastic-Job-Lite和Elastic-Job-Cloud组成。
Elastic-Job-Lite定位为轻量级无中心化解决方案，使用jar包的形式提供分布式任务的协调服务。 Elastic-Job-Cloud使用Mesos + Docker的解决方案，额外提供资源治理、应用分发以及进程隔离等服务。
Elastic-Job-Lite和Elastic-Job-Cloud提供同一套API开发作业，开发者仅需一次开发，然后可根据需要以Lite或Cloud的方式部署。
功能列表 1. Elastic-Job-Lite  分布式调度协调 弹性扩容缩容 失效转移 错过执行作业重触发 作业分片一致性，保证同一分片在分布式环境中仅一个执行实例 自诊断并修复分布式不稳定造成的问题 支持并行调度 支持作业生命周期操作 丰富的作业类型 Spring整合以及命名空间提供 运维平台  2. Elastic-Job-Cloud  包含Elastic-Job-Lite的全部功能 应用自动分发 基于Fenzo的弹性资源分配 基于Docker的进程隔离(TBD)  Release Notes Architecture Elastic-Job-Lite Elastic-Job-Cloud Quick Start Elastic-Job-Lite 引入maven依赖 &amp;lt;!-- 引入elastic-job-lite核心模块 --&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.dangdang&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;elastic-job-lite-core&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${latest.release.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; &amp;lt;!-- 使用springframework自定义命名空间时引入 --&amp;gt; &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;com.dangdang&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;elastic-job-lite-spring&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${latest.release.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt;  作业开发 public class MyElasticJob implements SimpleJob { @Override public void execute(ShardingContext context) { switch (context.</description>
    </item>
    
  </channel>
</rss>